#autoload

typeset -g ZSH_DEFAULT_PROMPT_CHAR="○"
typeset -g ZSH_GIT_PROMPT_CHAR="±"
typeset -g ZSH_HG_PROMPT_CHAR="☿"

prompt_0x2a_git_info() {
  # Call gitstatus_query synchronously. Note that gitstatus_query can also be called
  # asynchronously; see documentation in gitstatus.plugin.zsh.
  gitstatus_query MY                  || return $status  # error
  [[ $VCS_STATUS_RESULT == ok-sync ]] || return 0  # not a git repo

  local git_ref

  if [[ -n "$VCS_STATUS_LOCAL_BRANCH" ]]; then
    git_ref="%F{green}${VCS_STATUS_LOCAL_BRANCH//\%/%%}%f"
  elif [[ -n "$VCS_STATUS_TAG" ]]; then
    git_ref="%F{magenta}%B${VCS_STATUS_TAG//\%/%%}%b%f"
  else
    git_ref="%F{magenta}%B${VCS_STATUS_COMMIT//\%/%%}%b%f"
  fi

  [[ $VCS_STATUS_COMMITS_AHEAD  -gt 0 ]] && git_ref+=" %F{green}⇡${VCS_STATUS_COMMITS_AHEAD}%f"
  [[ $VCS_STATUS_COMMITS_BEHIND -gt 0 ]] && git_ref+=" %F{red}⇣${VCS_STATUS_COMMITS_BEHIND}%f"

  local num_changes_str
  num_changes_str=""

  if [[ $VCS_STATUS_HAS_STAGED == 1 || $VCS_STATUS_HAS_UNSTAGED == 1 || $VCS_STATUS_HAS_UNTRACKED == 1 ]]; then
    local -a num_changes

    [[ $VCS_STATUS_HAS_STAGED      == 1 ]] && num_changes+=("%F{yello}${VCS_STATUS_NUM_STAGED}%F{red}")
    [[ $VCS_STATUS_HAS_UNSTAGED    == 1 ]] && num_changes+=("%F{green}${VCS_STATUS_NUM_UNSTAGED}%F{red}")
    [[ $VCS_STATUS_HAS_UNTRACKED   == 1 ]] && num_changes+=("%F{cyan}${VCS_STATUS_NUM_UNTRACKED}%F{red}")

    num_changes_str=" %F{red}(${(j:·:)num_changes}%)%f"
  fi

  echo "%F{cyan}$ZSH_GIT_PROMPT_CHAR%f ${git_ref}${num_changes_str}"
}

prompt_0x2a_hg_info() {
  echo "%F{cyan}$ZSH_HG_PROMPT_CHAR%f"
}

prompt_0x2a_vcs_info() {
  in-git-repo && echo " $(prompt_0x2a_git_info)" && return
  hg root &>/dev/null && echo " $(prompt_0x2a_hg_info)" && return
}

prompt_0x2a_pwd() {
  local pwdstr="%1~"
  if [[ ${PWD:A} =~ $HOME ]]; then
    echo "%F{yellow}${(N)pwdstr}%f"
  else
    echo "%F{red}%B${(N)pwdstr}%b%f"
  fi
}

prompt_0x2a_jobs() {
  local number_of_jobs=$(builtin jobs -s | wc -l)
  if (( $number_of_jobs > 0 )); then
    echo " %F{magenta}[${number_of_jobs}]%f"
  fi
}

prompt_0x2a_help() {
  cat <<'EOF'

  prompt 0x2a

EOF
}

prompt_0x2a_ps1() {
  local -ah prompt

  prompt=(
    "%F{blue}%B[%b"
    "$(prompt_0x2a_pwd)"
    "$(prompt_0x2a_vcs_info)"
    "%F{blue}%B]%b%f"
    "$(prompt_0x2a_jobs)"
    "%F{%(?.green.red)}"
    " $ZSH_DEFAULT_PROMPT_CHAR %f"
  )

  PS1="${(j::)prompt}"
}

prompt_0x2a_setup() {
  add-zsh-hook precmd prompt_0x2a_ps1
  return 0
}

prompt_0x2a_setup "$@"
