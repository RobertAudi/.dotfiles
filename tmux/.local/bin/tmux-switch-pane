#!/usr/bin/env zsh

emulate -L zsh

if [[ -z "$TMUX" ]]; then
  builtin print -P -u 2 -- "[%F{196}ERROR%f] Not inside a tmux session"
  return 1
fi

if ! type fzf >/dev/null; then
  tmux display-message "୧( ಠ Д ಠ )୨ command not found: fzf" >&2
  return 127
fi

zparseopts -D a+=all

local panes

if (( $#all )); then
  panes=$(tmux list-panes -a -F "#S:#I:#P #{window_name}  ⎯→  #{pane_current_path}")
else
  panes=$(tmux list-panes -s -F "#I:#P #{window_name}  ⎯→  #{pane_current_path}")
fi

if (( ${#panes} == 1 )); then
  tmux display-message "The active tmux pane is the only one."
  return 1
fi

local current_pane
current_pane=$(tmux display-message -p '#S:#I:#P')

local current_window
current_window=$(tmux display-message -p '#S:#I')

local current_session
current_session=$(tmux display-message -p '#S')

local preview_cmd
preview_cmd="tmux display-message -p -t"\$(builtin print -n {} | cut -d\\  -f1 | tr ':' '.')" -F \""
preview_cmd="${preview_cmd}Session: #{session_name} ###### "
preview_cmd="${preview_cmd}Window:  #{window_name} ###### "
preview_cmd="${preview_cmd}Path:    #{pane_current_path} ###### "
preview_cmd="${preview_cmd}Command: #{pane_current_command}"
preview_cmd="${preview_cmd}\" | sed 's/ ### /\\n/g'"

local target status_code
target=$(builtin print -- "${panes[@]}" | command grep -v "${current_pane}" | fzf ${=FZF_DEFAULT_OPTS} +m --height="100%" --preview $preview_cmd) || return $status
status_code=$?

if (( $status_code != 0 )) || [[ -z "$target" ]]; then
  (( $status_code == 0 )) && status_code=1

  return $status_code
fi

local target_session
target_session=$(builtin print -- $target | awk 'BEGIN{FS=":|-"} {print$1}')

local target_window
target_window=$(builtin print -- $target | awk 'BEGIN{FS=":|-"} {print$2}')

local target_pane
target_pane=$(builtin print -- $target | awk 'BEGIN{FS=":|-"} {print$3}' | cut -c 1)

if [[ "$current_session" == "$target_session" && "$current_window" == "$target_window" ]]; then
  tmux select-pane -t "${target_window}.${target_pane}"
elif [[ "$current_session" != "$target_session" ]]; then
  tmux switch-client -t "${target_session}:${target_window}.${target_pane}"
else
  tmux select-pane -t "${target_window}.${target_pane}" &&
    tmux select-window -t $target_window
fi
