load ENV.fetch("IRBRC", File.expand_path(File.join(ENV.fetch("XDG_CONFIG_HOME", "~/.config"), "irb/irbrc")))

Pry.config.editor = "vim"
Pry.config.hooks.add_hook(:after_session, :say_bye) do
  puts "bye-bye"
end

Pry.config.prompt = Pry::Prompt.new("default", "The default prompt", [
  proc { |obj, nest_level, pry| "#{RUBY_VERSION} (#{obj}):#{nest_level} > " },
  proc { |obj, nest_level, pry| "#{RUBY_VERSION} (#{obj}):#{nest_level} * " }
])

Pry.config.print = proc do |output, value|
  if defined?(AmazingPrint)
    # Stolen from https://github.com/sheerun/dotfiles
    #   https://github.com/sheerun/dotfiles/blob/2b6a49718048f772f6ab80211e1072caac5c31dc/pryrc#L20-L22
    #
    # The following line enables amazing_print for all pry output,
    # and it also enables paging
    Pry::Helpers::BaseHelpers.stagger_output("=> #{value.ai}", output)
  else
    Pry::Helpers::BaseHelpers.stagger_output("=> #{value.inspect}", output)
  end
end

if defined?(PryTheme)
  Pry.config.theme = "railscasts"
end

defined?(AmazingPrint) and AmazingPrint.pry!

Pry.config.exception_handler = proc do |output, exception, _pry_|
  output.puts "#{exception.class}: #{exception.message}"
  output.puts exception.backtrace.first

  if defined?(Rails) && defined?(PG)
    if exception.instance_of?(ActiveRecord::StatementInvalid) && exception.original_exception.is_a?(PG::Error)
      unfuck_activerecord_transaction
    end
  end
end
