if RUBY_ENGINE == "ruby" && RUBY_VERSION < "2.6"
  raise "This IRB config only works with Ruby version 2.6 and greated"
end

require "pp"
require "fileutils"
require "date"

require_relative "../../.local/share/irb/xdg"
include LocalExtensions::IRB::XDG

# Gems {{{
# ---------------------------------------------------------------------
%w[amazing_print did_you_mean table_flipper where_is].each do |gem|
  require gem
rescue LoadError
end

# --------------------------------------------------------------------- }}}

# Logger {{{
# ---------------------------------------------------------------------
begin
  require "active_support/logger"
  $logger_class = ActiveSupport::Logger
rescue LoadError
  require "logger"
  $logger_class = Logger
end
# --------------------------------------------------------------------- }}}

puts "## #{RUBY_DESCRIPTION}"
puts "`$logger_class' is `#{$logger_class.name}'"

# IRB-specific configuration {{{
# ---------------------------------------------------------------------
if defined?(IRB)
  irb_cache_dir = File.join(xdg.cache_home, "ruby/#{RUBY_ENGINE}-#{RUBY_VERSION}#{RUBY_PATCHLEVEL}/irb")
  File.directory?(irb_cache_dir) or FileUtils.mkdir_p(irb_cache_dir)

  require "irb/completion"
  require "irb/ext/save-history"

  IRB.conf[:PROMPT] ||= {}
  IRB.conf[:PROMPT][:MY_PROMPT] = {
    PROMPT_I: ">> ", # normal
    PROMPT_N: "|  ", # indenting
    PROMPT_C: " > ", # continuing a statement
    PROMPT_S: "%l> ", # continuing a string
    RETURN: "=> %s \n",
    AUTO_INDENT: true
  }

  IRB.conf[:PROMPT_MODE] = :MY_PROMPT
  IRB.conf[:AUTO_INDENT] = true
  IRB.conf[:EVAL_HISTORY] = 10_000
  IRB.conf[:SAVE_HISTORY] = 10_000
  IRB.conf[:HISTORY_FILE] ||= File.expand_path(File.join(irb_cache_dir, "history"))

  defined?(AmazingPrint) and AmazingPrint.irb!
end
# --------------------------------------------------------------------- }}}

# Local extensions {{{
# ---------------------------------------------------------------------
irb_data_home = File.join(xdg.data_home, "irb")

Dir[File.join(irb_data_home, "**", "*.rb")].each { |file| require file }

include LocalExtensions::IRB::REPL
include LocalExtensions::IRB::CoreExt::Object
include LocalExtensions::IRB::CoreExt::String

begin
  require "active_support/testing/stream"
  include ActiveSupport::Testing::Stream
rescue LoadError
  include LocalExtensions::IRB::Stream
end

if defined?(Rails)
  include LocalExtensions::IRB::Rails
end

if defined?(Sidekiq)
  include LocalExtensions::IRB::Sidekiq
end
# --------------------------------------------------------------------- }}}

# Modeline {{{
# vim: set foldmarker={{{,}}} foldlevel=0 foldmethod=marker : }}}
