#!/usr/bin/env zsh

git-apple-pick-help() {
  echo "Usage: git apple-pick <branch> <commits>"
  echo "  <branch>: The branch to rebase (not the current branch!)"
  echo "  <commits>: The commits to pick"
}

git-apple-pick() {
  if ! in-git-repo; then
    builtin print -u 2 -- "\e[1;41;97m ERROR \e[0m Not a repository: $PWD"
    return 1
  fi

  if [[ "$1" =~ "-h(elp)?" ]]; then
    git-apple-pick-help

    return
  elif (( $# < 2 )); then
    builtin print -u 2 -- "\e[1;41;97m ERROR \e[0m branch and commits required"

    git-apple-pick-help

    return 1
  fi

  local branch="$1"
  local commits="${@:2}"

  if ! git local-branch-exists $branch; then
    echo "FIXME"
    builtin print -u 2 -- "\e[1;41;97m ERROR \e[0m Invalid branch: ${branch}"
    return 1
  fi

  local current_branch
  current_branch="$(git current-branch)"

  if (( $status != 0 )) ; then
    builtin print -u 2 -- "\e[1;41;97m ERROR \e[0m Unable to find current branch name"
    return 1
  fi

  local old_branch="__git-apple-pick__/${branch}"

  git branch --move --force "$old_branch" || return $status
  git checkout -b "$current_branch" "$branch"
  git cherry-pick ${=commits} || return $status
  git branch --delete --force "$old_branch"
}

git-apple-pick "$@"
